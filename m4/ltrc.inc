# Required to build Windows resource file

# AM_SILENT_RULES handling

AM_V_RC = $(am__v_RC_$(V))
am__v_RC_ = $(am__v_RC_$(AM_DEFAULT_VERBOSITY))
am__v_RC_0 = @echo "  RC    " $@;

RCCOMPILE = $(RC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS)
  
LTRCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=RC --mode=compile $(RCCOMPILE)

.rc.lo:
	$(AM_V_RC)$(LTRCCOMPILE) -i "$<" -o "$@"

.rc.o:
	$(AM_V_RC)$(RCCOMPILE) -i "$<" -o "$@"

# Some useful ELF resource linking with objcopy
#.bin.o:
#     $(AM_V_GEN)$(LD) -r -o "src/$*.o" -z noexecstack --format=binary "$<"
#     $(AM_V_at)$(OBJCOPY) --rename-section .data=.rodata,alloc,load,readonly,data,contents "src/$*.o"
	
#.bin.lo:
#     $(AM_V_GEN)$(LD) -r -o "src/$*.o" -z noexecstack --format=binary "$<"
#     $(AM_V_at)$(OBJCOPY) --rename-section .data=.rodata,alloc,load,readonly,data,contents "src/$*.o"
#     $(AM_V_at)echo "# $@ - a libtool object file" >"$@"
#     $(AM_V_at)echo "# Generated by $(shell $(LIBTOOL) --version | head -n 1)" >>"$@"
#     $(AM_V_at)echo "#" >>"$@"
#     $(AM_V_at)echo "# Please DO NOT delete this file!" >>"$@"
#     $(AM_V_at)echo "# It is necessary for linking the library." >>"$@"
#     $(AM_V_at)echo >>"$@"
#     $(AM_V_at)echo "# Name of the PIC object." >>"$@"
#     $(AM_V_at)echo "pic_object='$*.o'" >>"$@"
#     $(AM_V_at)echo >>"$@"
#     $(AM_V_at)echo "# Name of the non-PIC object" >>"$@"
#     $(AM_V_at)echo "non_pic_object='$*.o'" >>"$@"
#     $(AM_V_at)echo >>"$@"